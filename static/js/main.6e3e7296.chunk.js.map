{"version":3,"sources":["components/Header/HeaderUser.jsx","actions/actions.js","actions/actionTypes.js","components/Header/Header.jsx","components/Cart/CartEmpty.jsx","components/Cart/CartItem.jsx","components/Cart/CartTotalPrice.jsx","components/Cart/CartTable.jsx","components/Cart/Cart.jsx","components/Book/BookPrice.jsx","spinner/spinner.jsx","api/api.js","components/Book/Book.jsx","components/SignIn/SignIn.jsx","components/NotFound/NotFound.jsx","components/BookList/BookItem.jsx","components/Filters/Filters.jsx","components/BookList/BookList.jsx","reducers/books.js","reducers/reducers.js","store.js","App.jsx","index.jsx"],"names":["connect","state","user","books","dispatch","signOutUser","type","username","avatar","to","height","src","alt","onClick","className","CartEmpty","CartItem","currentCart","name","count","totalPriceBook","defaultProps","undefined","CartTotalPrice","props","cart","totalPrice","forEach","item","CartTable","map","key","id","Cart","BookPrice","price","maxBooks","useState","setstate","value","onChange","e","target","toFixed","disabled","Spinner","API_URL","fetchApi","url","option","Promise","resolve","reject","fetch","then","response","status","json","data","catch","error","CallApi","token","mode","headers","Authorization","body","method","Accept","JSON","stringify","book","loading","fetchBookRequest","fetchBookSuccess","bookSuccess","fetchBookFailure","bookFailure","match","title","author","description","cover","tags","level","useEffect","get","params","setTimeout","posterImage","signInUser","signIn","inputText","setstateInput","errorText","setstateError","htmlFor","length","placeholder","func","post","NotFound","BookItem","image","Filters","fetchBooksRequest","fetchBooksSuccess","booksSuccess","fetchBooksFailure","booksFailure","spinner","booksArea","initialState","filters","search","action","quantity","reducers","combineReducers","store","createStore","App","exact","path","component","SignIn","BookList","Book","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e3e7296.chunk.js","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {signOut} from '../../actions/actions';\n\nconst HeaderUser = ({user, signOutUser}) => {\n  const {username, avatar} = user;\n\n  return (\n    <div>\n      <Link to=\"/cart\">\n        <img height=\"40\" src=\"./images/cart.svg\" alt=\"cart\" />\n      </Link>\n      <button onClick={signOutUser} type=\"button\" className=\"btn btn-primary m-2\">Sing-Out</button>\n      <img height=\"40\" className=\"m-2 rounded-circle\" src={avatar} alt=\"avatar\" />\n      <span>{username}</span>\n    </div>\n  )\n}\n\nHeaderUser.propTypes = {\n  user: PropTypes.instanceOf(Object).isRequired,\n  signOutUser: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.books.user,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  signOutUser: () => dispatch(signOut()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderUser);","import * as actionTypes from './actionTypes';\n\nexport const booksRequest = () => ({\n  type: actionTypes.FETCH_BOOKS_REQUEST,\n});\n\nexport const booksSuccess = (books) => ({\n  type: actionTypes.FETCH_BOOKS_SUCCESS,\n  books,\n});\n\nexport const booksFailure = (error) => ({\n  type: actionTypes.FETCH_BOOKS_FAILURE,\n  error,\n});\n\nexport const signIn = (username, avatar, token) => ({\n  type: actionTypes.SIGNIN,\n  username,\n  avatar,\n  token,\n});\n\nexport const signOut = () => ({\n  type: actionTypes.SIGNOUT,\n});\n\nexport const addBook = (book, quantity) => ({\n  type: actionTypes.ADD_BOOK,\n  book,\n  quantity,\n});\n\nexport const bookRequest = () => ({\n  type: actionTypes.FETCH_BOOK_REQUEST,\n});\n\nexport const bookSuccess = (book) => ({\n  type: actionTypes.FETCH_BOOK_SUCCESS,\n  book,\n});\n\nexport const bookFailure = (error) => ({\n  type: actionTypes.FETCH_BOOK_FAILURE,\n  error,\n});\n\nexport const sendBook = () => ({\n  type: actionTypes.SEND_BOOK,\n});\n\nexport const showFilteredBooks = (name, value) => ({\n  type: actionTypes.SHOW_FILTERED_BOOKS,\n  name,\n  value,\n});\n","export const SIGNOUT = 'SIGNUOT';\n\nexport const SIGNIN = 'SIGNIN';\n\nexport const FETCH_BOOKS_REQUEST = 'FETCHS_BOOK_REQUEST';\n\nexport const FETCH_BOOKS_SUCCESS = 'FETCH_BOOKS_SUCCESS';\n\nexport const FETCH_BOOKS_FAILURE = 'FETCH_BOOKS_FAILURE';\n\nexport const FETCH_BOOK_REQUEST = 'FETCH_BOOK_REQUEST';\n\nexport const FETCH_BOOK_SUCCESS = 'FETCH_BOOK_SUCCESS';\n\nexport const FETCH_BOOK_FAILURE = 'FETCH_BOOK_FAILURE';\n\nexport const ADD_BOOK = 'ADD_BOOK';\n\nexport const SEND_BOOK = 'SEND_BOOKS';\n\nexport const SHOW_FILTERED_BOOKS = 'SHOW_FILTERED_BOOKS';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport HeaderUser from './HeaderUser';\n\nconst Header = ({user}) => {\n  return (\n    <nav className=\"navbar navbar-dark\">\n      <h3>JS BAND STORE / Serhii Babii</h3>\n      {user.username ? <HeaderUser /> : null}\n    </nav>\n  )\n}\n\nHeader.propTypes = {\n  user: PropTypes.instanceOf(Object).isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.books.user,\n})\n\nexport default connect(mapStateToProps)(Header);","import React from 'react'\n\nconst CartEmpty = () => {\n  return (\n    <div className=\"text-center\">\n      <img className=\"text-center\" height=\"80\" src=\"./images/cart.svg\" alt=\"empty cart\" />\n      <p>Cart empty.</p>\n    </div>\n  )\n}\n\nexport default CartEmpty;","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst CartItem = ({currentCart}) => {\n  const {name, count, totalPriceBook} = currentCart;\n  return (\n    <tr className=\"row\">\n      <td className=\"col-1\">{name}</td>\n      <td className=\"col-10\">{count}</td>\n      <td className=\"col-1\">{totalPriceBook}</td>\n    </tr>\n  )\n}\n\nCartItem.defaultProps = {\n  currentCart: {},\n  name: '',\n  count: '',\n  totalPriceBook: undefined,\n}\n\nCartItem.propTypes = {\n  currentCart: PropTypes.instanceOf(Object),\n  name: PropTypes.string,\n  count: PropTypes.string,\n  totalPriceBook: PropTypes.number,\n}\n\nexport default CartItem;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CartTotalPrice = (props) => {\n  const {cart} = props;\n  let totalPrice = 0;\n  if(cart) {\n    cart.forEach((item) => {\n      totalPrice += +item.totalPriceBook\n    })\n  }\n  return (\n    <div>\n      <b>\n        Total price, $\n        {totalPrice}\n      </b>\n    </div>\n  )\n}\n\nCartTotalPrice.defaultProps = {\n  cart: undefined,\n}\n\nCartTotalPrice.propTypes = {\n  cart: PropTypes.instanceOf(Object),\n}\n\nexport default CartTotalPrice;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport CartItem from \"./CartItem\";\nimport CartTotalPrice from \"./CartTotalPrice\";\n\nconst CartTable = ({cart}) => {\n  return (\n    <div>\n      <table className=\"table m-3\">\n        <tbody>\n          {cart ? cart.map((item) => <CartItem key={item.id} currentCart={item} />) : null}\n        </tbody>\n      </table>\n      <CartTotalPrice cart={cart || null} />\n    </div>\n  )\n}\n\nCartTable.defaultProps = {\n  cart: undefined,\n}\n\nCartTable.propTypes = {\n  cart: PropTypes.instanceOf(Object),\n}\n\nexport default CartTable;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport CartEmpty from './CartEmpty'\nimport CartTable from './CartTable'\n\nconst Cart = ({cart}) => {\n  return (\n    <div>\n      {cart ? <CartTable /> : <CartEmpty />}\n    </div>\n  )\n}\n\nCart.defaultProps = {\n  cart: undefined,\n}\n\nCart.propTypes = {\n  cart: PropTypes.instanceOf(Object),\n}\n\nexport default Cart;","import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\n\nconst BookPrice = ({price, maxBooks}) => {\n  const [state, setstate] = useState(1);\n\n  return (\n    <div className=\"border p-2\">\n      <p className=\"row\">\n        <span className=\"col-8\">Price, $</span>\n        <span className=\"col-2\">{price}</span>\n      </p>\n      <div className=\"row\">\n        <span className=\"col-8\">Count</span>\n        <input\n          className=\"col-3 rounded pl-2 pr-0\"\n          value={state}\n          type=\"number\"\n          name=\"countInput\"\n          onChange={(e) => {\n          if(e.target.value < 0){\n            return 1\n          }\n          if(e.target.value > maxBooks) {\n            return e.target.value\n          }\n          return setstate(e.target.value)\n        }}\n        />\n      </div>\n      <p className=\"row\">\n        <span className=\"col-8\">Total price </span>\n        <span className=\"col-2\">{(price * state).toFixed(2)}</span>\n      </p>\n      <div className=\"text-right\">\n        <button disabled={state < 1} className=\"btn btn-secondary\" type=\"button\">Add to cart</button>\n      </div>\n    </div>\n  )\n}\n\nBookPrice.propTypes = {\n  price: PropTypes.number.isRequired,\n  maxBooks: PropTypes.number.isRequired,\n}\n\nexport default BookPrice\n","import React from \"react\";\n\nimport \"./spinner.css\";\n\nconst Spinner = () => {\n  return (\n    <div className=\"lds-css ng-scope\">\n      <div className=\"lds-wedges\">\n        <div>\n          <div>\n            <div />\n          </div>\n          <div>\n            <div />\n          </div>\n          <div>\n            <div />\n          </div>\n          <div>\n            <div />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Spinner;","const API_URL = 'https://js-band-api.glitch.me';\n\nexport const fetchApi = (url, option = {}) => {\n  return new Promise((resolve, reject) => {\n    fetch(url, option)\n      .then((response) => {\n        if (response.status < 400) {\n          return response.json();\n        }\n        throw response;\n      })\n      .then((data) => {\n        resolve(data);\n      })\n      .catch((response) => {\n        response.json().then((error) => {\n          reject(error);\n        });\n      });\n  });\n};\n\nexport default class CallApi {\n  static get(url, token) {\n    return fetchApi(`${API_URL}${url}`, {\n      mode: 'cors',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    });\n  }\n\n  static post(url, body) {\n    return fetchApi(`${API_URL}${url}`, {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n      },\n      body: JSON.stringify(body),\n    });\n  }\n}\n","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux';\nimport {bookRequest, bookSuccess, bookFailure} from '../../actions/actions';\nimport BookPrice from './BookPrice';\nimport Spinner from '../../spinner/spinner';\nimport CallApi from '../../api/api';\n\nconst Book = ({\n  match,\n  token,\n  loading,\n  book,\n  book: {\n    title,\n    author,\n    description,\n    cover, tags,\n    level,\n    count,\n    price,\n  },\n  fetchBookSuccess,\n  fetchBookRequest,\n  fetchBookFailure,\n}) => {\n  \n  useEffect(() => {\n    CallApi.get(`/books/${match.params.id}`, token)\n    .then((data) => {\n      fetchBookRequest();\n      setTimeout(() => fetchBookSuccess(data), 2000);\n  })\n  }, [fetchBookRequest, fetchBookSuccess, match.params.id, token]);\n\n  const posterImage = cover || './images/imageNotFound.png';\n\n  return (\n    (book.title && !loading) ? (\n      <div className=\"m-3\">\n        <div className=\"row\">\n          <img className=\"col-4\" src={posterImage} alt=\"poster\" />\n          <div className=\"col-4\">\n            <p>\n              Book name:\n              {' '}\n              {title}\n            </p>\n            <p>\n              Book author:\n              {' '}\n              {author}\n            </p>\n            <p>\n              Book level:\n              {' '}\n              {level}\n            </p>\n            <p>\n              Book tags:\n              {' '}\n              {tags}\n            </p>\n          </div>\n          <div className=\"col-4\">\n            <BookPrice price={price} maxBooks={count} />\n          </div>\n        </div>\n        <p>\n          Description: \n          {description}\n        </p>\n      </div>\n    ) : <Spinner />\n  )\n}\n\nBook.propTypes = {\n  book: PropTypes.instanceOf(Object).isRequired,\n  loading: PropTypes.bool.isRequired,\n  token: PropTypes.string.isRequired,\n  match: PropTypes.instanceOf(Object).isRequired,\n  fetchBookRequest: PropTypes.func.isRequired,\n  fetchBookSuccess: PropTypes.func.isRequired,\n  fetchBookFailure: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  book: state.books.book,\n  loading: state.books.loading,\n  token: state.books.user.token,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchBookRequest: () => dispatch(bookRequest()),\n  fetchBookSuccess: (book) => dispatch(bookSuccess(book)),\n  fetchBookFailure: (error) => dispatch(bookFailure(error)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Book);\n","import React, {useState} from 'react'\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {signIn} from '../../actions/actions';\nimport CallApi from '../../api/api';\n\nconst fetchFOrSignin = (name, func) => {\n  CallApi.post('/signin', {\n    username: name,\n  }).then((data) => {\n    const {username, avatar, token} = data;\n    func(username, avatar, token);\n  })\n}\n\nconst SignIn = ({signInUser}) => {\n  const [inputText, setstateInput] = useState('');\n  const [errorText, setstateError] = useState('');\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12 text-center\">\n        <div>\n          <img className=\"border\" height=\"250\" src=\"images/defaultAvatar.png\" alt=\"avatar\" />\n        </div>\n        <div className=\"m-2\">\n          <label htmlFor=\"username\">\n            <p className=\"mb-0\"><b>Username</b></p>\n            <input\n              value={inputText}\n              onChange={(e) => {\n                setstateInput(e.target.value);\n                if(e.target.value.length < 4 || e.target.value.length > 16) {\n                  setstateError('error');\n                } else {\n                  setstateError('');\n                }\n              }}\n              className=\"col-12\"\n              type=\"text\"\n              name=\"username\"\n              id=\"username\"\n              placeholder=\"type Username\"\n            />\n          </label>\n          {errorText ? <p className=\"text-danger\">Field is not valid</p> : null}\n        </div>\n        <div>\n          <button onClick={() => fetchFOrSignin(inputText, signInUser)} disabled={!!errorText} className=\"col-2\" type=\"button\">Sign-In</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nSignIn.propTypes = {\n  signInUser: PropTypes.func.isRequired,\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  signInUser: (username, avatar, token) => dispatch(signIn(username, avatar, token)),\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n","import React from 'react'\n\nconst NotFound = () => {\n  return (\n    <div className=\"text-center\">\n      <img className=\"col-8\" src=\"./images/error404.jpg\" alt=\"error404\" />\n    </div>\n  )\n}\n\nexport default NotFound;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n\nconst BookItem = ({book}) => {\n  const {id, cover, title, author, price} = book;\n  const image = cover || 'images/imageNotFound.png'\n  return (\n    <div className=\"cart row col-3 border m-4 p-3\">\n      <img className=\"col-12\" src={image} alt=\"cover\" />\n      <p className=\"col-12\">{title}</p>\n      <p className=\"col-12\">{author}</p>\n      <p className=\"row col-12\">\n        <span className=\"col-8\">\n          Price:\n          {' '}\n          {price}\n        </span>\n        <Link to={`/books/${id}`} className=\"btn btn-secondary col-4\">View</Link>\n      </p>\n    </div>\n  )\n}\n\nBookItem.propTypes = {\n  book: PropTypes.instanceOf(Object).isRequired,\n}\n\nexport default BookItem;","import React from 'react';\n\nconst Filters = () => {\n  return (\n    <div className=\"form-group row\">\n      <input className=\"form-control col-6\" type=\"text\" name=\"search\" placeholder=\"Search by book name\" />\n      <select className=\"form-control col-3\" name=\"price\">\n        <option value=\"all\">all</option>\n        <option value=\"from_0_to_15\">{'0 < price > 15'}</option>\n        <option value=\"from_15_to_30\">{'15 < price > 30'}</option>\n        <option value=\"more_than_30\">{'price > 30'}</option>\n      </select>\n    </div>\n  )\n}\n\nexport default Filters;\n","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport BookItem from './BookItem';\nimport Filters from '../Filters/Filters';\nimport {booksRequest, booksSuccess, booksFailure} from '../../actions/actions';\nimport CallApi from '../../api/api';\nimport Spinner from '../../spinner/spinner'\n\nconst BookList = ({books, token, loading, fetchBooksRequest, fetchBooksSuccess, fetchBooksFailure}) => {\n  useEffect(() => {\n    CallApi.get('/books', token)\n    .then((data) => {\n      fetchBooksRequest();\n      setTimeout(() => fetchBooksSuccess(data), 2000);\n    })\n  }, [fetchBooksRequest, fetchBooksSuccess, token]);\n\n  const spinner = (loading) ? <Spinner /> : null;\n  const booksArea = (books && !loading) ? (books.map((item)=> <BookItem key={item.id} book={item} />)) : null;\n\n  return (\n    <div className=\"row p-3\">\n      <div className=\"col-10\">\n        <Filters />\n      </div>\n      <div className=\"row\">\n        {spinner}\n        {booksArea}\n      </div>\n    </div>\n  )\n}\n\nBookList.propTypes = {\n  books: PropTypes.instanceOf(Array).isRequired,\n  token: PropTypes.string.isRequired,\n  loading: PropTypes.bool.isRequired,\n  fetchBooksRequest: PropTypes.func.isRequired,\n  fetchBooksSuccess: PropTypes.func.isRequired,\n  fetchBooksFailure: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  books: state.books.books,\n  token: state.books.user.token,\n  loading: state.books.loading,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchBooksRequest: () => dispatch(booksRequest()),\n  fetchBooksSuccess: (books) => dispatch(booksSuccess(books)),\n  fetchBooksFailure: (error) => dispatch(booksFailure(error)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookList);\n\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  user: {\n    username: undefined,\n    avatar: undefined,\n    token: undefined,\n  },\n  books: [],\n  book: {},\n  filters: {\n    search: '',\n    price: 'all',\n  },\n  cart: undefined,\n  loading: false,\n  error: null,\n};\n\nconst books = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SIGNIN:\n      return {\n        ...state,\n        user: {\n          username: action.username,\n          avatar: action.avatar,\n          token: action.token,\n        },\n      };\n    case actionTypes.SIGNOUT:\n      return {\n        ...state,\n        user: {\n          username: undefined,\n          avatar: undefined,\n          token: undefined,\n        },\n      };\n    case actionTypes.SHOW_FILTERED_BOOKS:\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          [action.name]: action.value,\n        },\n      };\n    case actionTypes.FETCH_BOOKS_REQUEST:\n      return {\n        ...state,\n        books: [],\n        loading: true,\n        error: null,\n      };\n    case actionTypes.FETCH_BOOKS_SUCCESS:\n      return {\n        ...state,\n        books: action.books,\n        loading: false,\n        error: null,\n      };\n    case actionTypes.FETCH_BOOKS_FAILURE:\n      return {\n        ...state,\n        books: [],\n        loading: false,\n        error: action.error,\n      };\n    case actionTypes.FETCH_BOOK_REQUEST:\n      return {\n        ...state,\n        book: {},\n        loading: true,\n        error: null,\n      };\n    case actionTypes.FETCH_BOOK_SUCCESS:\n      return {\n        ...state,\n        book: action.book,\n        loading: false,\n        error: null,\n      };\n    case actionTypes.FETCH_BOOK_FAILURE:\n      return {\n        ...state,\n        book: {},\n        loading: false,\n        error: action.error,\n      };\n    case actionTypes.ADD_BOOK:\n      return {\n        ...state,\n        cart: [\n          ...state.cart,\n          {\n            book: action.book,\n            quantity: action.quantity,\n          },\n        ],\n      };\n    case actionTypes.SEND_BOOK:\n      return {\n        ...state,\n        cart: undefined,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default books;\n","import { combineReducers } from 'redux';\nimport books from './books';\n\nconst reducers = combineReducers({\n  books,\n});\n\nexport default reducers;\n","import { createStore } from 'redux';\nimport reducers from './reducers/reducers';\n\nconst store = createStore(reducers);\n\nexport default store;\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport {Provider} from 'react-redux'\nimport Header from \"./components/Header/Header\";\nimport Cart from './components/Cart/Cart';\nimport Book from './components/Book/Book';\nimport SignIn from './components/SignIn/SignIn';\nimport NotFound from './components/NotFound/NotFound';\nimport BookList from './components/BookList/BookList';\nimport store from './store'\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"container\">\n          <hr />\n          <Header />\n          <hr />\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to=\"/signin\" />\n            </Route>\n            <Route path=\"/signin\" component={SignIn} /> \n            <Route exact path=\"/books\" component={BookList} /> \n            <Route path=\"/books/:id\" component={Book} />\n            <Route path=\"/cart\" component={Cart} />\n            <Route exact path=\"*\" component={NotFound} />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}