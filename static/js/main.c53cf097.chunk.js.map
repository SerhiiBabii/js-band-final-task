{"version":3,"sources":["components/Header/HeaderUser.jsx","actions/actions.js","actions/actionTypes.js","components/Header/Header.jsx","components/Cart/CartEmpty.jsx","components/Cart/CartItem.jsx","components/Cart/CartTotalPrice.jsx","components/Cart/CartTable.jsx","components/Cart/Cart.jsx","components/Book/BookPrice.jsx","spinner/spinner.jsx","api/api.js","components/Book/Book.jsx","components/SignIn/SignIn.jsx","components/NotFound/NotFound.jsx","components/BookList/BookItem.jsx","components/Filters/Filters.jsx","filters/filterForTitle.js","filters/filterForPrice.js","components/BookList/BookList.jsx","reducers/additionFunctions/updateCartItems.js","reducers/additionFunctions/updateCartItem.js","reducers/additionFunctions/updateTotalPrice.js","reducers/additionFunctions/updateOrder.js","reducers/books.js","reducers/reducers.js","store.js","App.jsx","index.jsx"],"names":["connect","state","user","books","dispatch","signOutUser","type","username","avatar","to","height","src","alt","onClick","className","CartEmpty","CartItem","currentCart","title","count","total","defaultProps","CartTotalPrice","orderTotal","cartItems","cart","map","item","key","id","purchase","disabled","length","addBookToCart","bookId","quantity","addBook","price","maxBooks","useState","setstate","value","name","onChange","e","target","toFixed","Spinner","API_URL","fetchApi","url","option","Promise","resolve","reject","fetch","then","response","status","json","data","catch","error","CallApi","token","mode","headers","Authorization","body","method","Accept","JSON","stringify","book","loading","fetchBookRequest","fetchBookSuccess","bookSuccess","fetchBookFailure","bookFailure","match","author","description","cover","tags","level","useEffect","get","params","setTimeout","posterImage","signInUser","signIn","inputText","setstateInput","errorText","setstateError","htmlFor","placeholder","func","post","NotFound","BookItem","image","search","filters","onChangeFilter","showFilteredBooks","filterForTitle","items","filter","toLowerCase","indexOf","filterForPrice","fetchBooksRequest","fetchBooksSuccess","booksSuccess","fetchBooksFailure","booksFailure","spinner","currentTodoList","booksArea","updateCartItems","index","slice","updateCartItem","updateTotalPrice","totalCount","updateOrder","find","itemIndex","findIndex","newItem","initialState","undefined","action","reducers","combineReducers","store","createStore","App","exact","path","component","SignIn","BookList","Book","Cart","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c53cf097.chunk.js","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {signOut} from '../../actions/actions';\n\nconst HeaderUser = ({user, signOutUser}) => {\n  const {username, avatar} = user;\n\n  return (\n    <div>\n      <Link to=\"/cart\">\n        <img height=\"40\" src=\"./images/cart.svg\" alt=\"cart\" />\n      </Link>\n      <button onClick={signOutUser} type=\"button\" className=\"btn btn-primary m-2\">Sing-Out</button>\n      <img height=\"40\" className=\"m-2 rounded-circle\" src={avatar} alt=\"avatar\" />\n      <span>{username}</span>\n    </div>\n  )\n}\n\nHeaderUser.propTypes = {\n  user: PropTypes.instanceOf(Object).isRequired,\n  signOutUser: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.books.user,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  signOutUser: () => dispatch(signOut()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderUser);","import * as actionTypes from './actionTypes';\n\nexport const booksRequest = () => ({\n  type: actionTypes.FETCH_BOOKS_REQUEST,\n});\n\nexport const booksSuccess = (books) => ({\n  type: actionTypes.FETCH_BOOKS_SUCCESS,\n  books,\n});\n\nexport const booksFailure = (error) => ({\n  type: actionTypes.FETCH_BOOKS_FAILURE,\n  error,\n});\n\nexport const signIn = (username, avatar, token) => ({\n  type: actionTypes.SIGNIN,\n  username,\n  avatar,\n  token,\n});\n\nexport const signOut = () => ({\n  type: actionTypes.SIGNOUT,\n});\n\nexport const addBook = (bookId, quantity) => ({\n  type: actionTypes.ADD_BOOK,\n  bookId,\n  quantity,\n});\n\nexport const bookRequest = () => ({\n  type: actionTypes.FETCH_BOOK_REQUEST,\n});\n\nexport const bookSuccess = (book) => ({\n  type: actionTypes.FETCH_BOOK_SUCCESS,\n  book,\n});\n\nexport const bookFailure = (error) => ({\n  type: actionTypes.FETCH_BOOK_FAILURE,\n  error,\n});\n\nexport const sendBook = () => ({\n  type: actionTypes.SEND_BOOK,\n});\n\nexport const showFilteredBooks = (name, value) => ({\n  type: actionTypes.SHOW_FILTERED_BOOKS,\n  name,\n  value,\n});\n","export const SIGNOUT = 'SIGNUOT';\n\nexport const SIGNIN = 'SIGNIN';\n\nexport const FETCH_BOOKS_REQUEST = 'FETCHS_BOOK_REQUEST';\n\nexport const FETCH_BOOKS_SUCCESS = 'FETCH_BOOKS_SUCCESS';\n\nexport const FETCH_BOOKS_FAILURE = 'FETCH_BOOKS_FAILURE';\n\nexport const FETCH_BOOK_REQUEST = 'FETCH_BOOK_REQUEST';\n\nexport const FETCH_BOOK_SUCCESS = 'FETCH_BOOK_SUCCESS';\n\nexport const FETCH_BOOK_FAILURE = 'FETCH_BOOK_FAILURE';\n\nexport const ADD_BOOK = 'ADD_BOOK';\n\nexport const SEND_BOOK = 'SEND_BOOKS';\n\nexport const SHOW_FILTERED_BOOKS = 'SHOW_FILTERED_BOOKS';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport HeaderUser from './HeaderUser';\n\nconst Header = ({user}) => {\n  return (\n    <nav className=\"navbar navbar-dark\">\n      <h3>JS BAND STORE / Serhii Babii</h3>\n      {user.username ? <HeaderUser /> : null}\n    </nav>\n  )\n}\n\nHeader.propTypes = {\n  user: PropTypes.instanceOf(Object).isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.books.user,\n})\n\nexport default connect(mapStateToProps)(Header);","import React from 'react'\n\nconst CartEmpty = () => {\n  return (\n    <div className=\"text-center\">\n      <img className=\"text-center\" height=\"80\" src=\"./images/cart.svg\" alt=\"empty cart\" />\n      <p>Cart empty.</p>\n    </div>\n  )\n}\n\nexport default CartEmpty;","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst CartItem = ({currentCart: {title, count, total}}) => {\n  return (\n    <tr className=\"row\">\n      <td className=\"col-7\">{title}</td>\n      <td className=\"col-4\">{count}</td>\n      <td className=\"col-1\">{total}</td>\n    </tr>\n  )\n}\n\nCartItem.defaultProps = {\n  currentCart: {},\n  title: '',\n  count: 0,\n  total: 0,\n}\n\nCartItem.propTypes = {\n  currentCart: PropTypes.instanceOf(Object),\n  title: PropTypes.string,\n  count: PropTypes.number,\n  total: PropTypes.number,\n}\n\nexport default CartItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CartTotalPrice = ({orderTotal}) => {\n  return (\n    <div>\n      <b>\n        Total price, $\n        {orderTotal}\n      </b>\n    </div>\n  )\n}\n\nCartTotalPrice.propTypes = {\n  orderTotal: PropTypes.string.isRequired,\n}\n\nexport default CartTotalPrice;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport CartItem from \"./CartItem\";\nimport CartTotalPrice from \"./CartTotalPrice\";\n\n\nconst CartTable = ({cartItems, orderTotal}) => {\n  return (\n    <div>\n      <table className=\"table m-3\">\n        <tbody>\n          {cartItems ? cartItems.map((item) => <CartItem key={item.id} currentCart={item} />) : null}\n        </tbody>\n      </table>\n      <CartTotalPrice orderTotal={orderTotal} />\n    </div>\n  )\n}\n\nCartTable.propTypes = {\n  cartItems: PropTypes.instanceOf(Object).isRequired,\n  orderTotal: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  cartItems: state.books.cart.cartItems,\n  orderTotal: state.books.cart.orderTotal,\n});\n\nexport default connect(mapStateToProps)(CartTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport CartEmpty from './CartEmpty';\nimport CartTable from './CartTable';\nimport {sendBook} from '../../actions/actions';\n\nconst Cart = ({cartItems, purchase}) => {\n  return (\n    <div>\n      <div className=\"text-right\">\n        <button onClick={purchase} disabled={!cartItems.length} className=\"btn btn-primary\" type=\"button\">Purchase</button>\n      </div>\n      {cartItems.length ? <CartTable /> : <CartEmpty />}\n    </div>\n  )\n}\n\nCart.propTypes = {\n  cartItems: PropTypes.instanceOf(Object).isRequired,\n  purchase: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  cartItems: state.books.cart.cartItems,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  purchase: () => dispatch(sendBook()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {addBook} from '../../actions/actions';\n\nconst BookPrice = ({id, price, maxBooks, addBookToCart}) => {\n  const [state, setstate] = useState(1);\n\n  return (\n    <div className=\"border p-2\">\n      <p className=\"row\">\n        <span className=\"col-8\">Price, $</span>\n        <span className=\"col-2\">{price}</span>\n      </p>\n      <div className=\"row\">\n        <span className=\"col-8\">Count</span>\n        <input\n          className=\"col-3 rounded pl-2 pr-0\"\n          value={state}\n          type=\"number\"\n          name=\"countInput\"\n          onChange={(e) => {\n          if(e.target.value < 0){\n            return 1\n          }\n          if(e.target.value > maxBooks) {\n            return e.target.value\n          }\n          return setstate(e.target.value)\n        }}\n        />\n      </div>\n      <p className=\"row\">\n        <span className=\"col-8\">Total price </span>\n        <span className=\"col-2\">{(price * state).toFixed(2)}</span>\n      </p>\n      <div className=\"text-right\">\n        <button onClick={()=> addBookToCart(id, state)} disabled={state < 1} className=\"btn btn-secondary\" type=\"button\">Add to cart</button>\n      </div>\n    </div>\n  )\n}\n\nBookPrice.propTypes = {\n  id: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  maxBooks: PropTypes.number.isRequired,\n  addBookToCart: PropTypes.func.isRequired,\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  addBookToCart: (bookId, quantity) => dispatch(addBook(bookId, quantity)),\n})\n\nexport default connect(null, mapDispatchToProps)(BookPrice)\n","import React from \"react\";\n\nimport \"./spinner.css\";\n\nconst Spinner = () => {\n  return (\n    <div className=\"lds-css ng-scope\">\n      <div className=\"lds-wedges\">\n        <div>\n          <div>\n            <div />\n          </div>\n          <div>\n            <div />\n          </div>\n          <div>\n            <div />\n          </div>\n          <div>\n            <div />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Spinner;","const API_URL = 'https://js-band-api.glitch.me';\n\nexport const fetchApi = (url, option = {}) => {\n  return new Promise((resolve, reject) => {\n    fetch(url, option)\n      .then((response) => {\n        if (response.status < 400) {\n          return response.json();\n        }\n        throw response;\n      })\n      .then((data) => {\n        resolve(data);\n      })\n      .catch((response) => {\n        response.json().then((error) => {\n          reject(error);\n        });\n      });\n  });\n};\n\nexport default class CallApi {\n  static get(url, token) {\n    return fetchApi(`${API_URL}${url}`, {\n      mode: 'cors',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    });\n  }\n\n  static post(url, body) {\n    return fetchApi(`${API_URL}${url}`, {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n      },\n      body: JSON.stringify(body),\n    });\n  }\n}\n","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux';\nimport {bookRequest, bookSuccess, bookFailure} from '../../actions/actions';\nimport BookPrice from './BookPrice';\nimport Spinner from '../../spinner/spinner';\nimport CallApi from '../../api/api';\n\nconst Book = ({\n  match,\n  token,\n  loading,\n  book,\n  book: {\n    id,\n    title,\n    author,\n    description,\n    cover, tags,\n    level,\n    count,\n    price,\n  },\n  fetchBookSuccess,\n  fetchBookRequest,\n  fetchBookFailure,\n}) => {\n  \n  useEffect(() => {\n    CallApi.get(`/books/${match.params.id}`, token)\n    .then((data) => {\n      fetchBookRequest();\n      setTimeout(() => fetchBookSuccess(data), 2000);\n  })\n  }, [fetchBookRequest, fetchBookSuccess, match.params.id, token]);\n\n  const posterImage = cover || './images/imageNotFound.png';\n\n  return (\n    (book.title && !loading) ? (\n      <div className=\"m-3\">\n        <div className=\"row\">\n          <img className=\"col-4\" src={posterImage} alt=\"poster\" />\n          <div className=\"col-4\">\n            <p>\n              Book name:\n              {' '}\n              {title}\n            </p>\n            <p>\n              Book author:\n              {' '}\n              {author}\n            </p>\n            <p>\n              Book level:\n              {' '}\n              {level}\n            </p>\n            <p>\n              Book tags:\n              {' '}\n              {tags}\n            </p>\n          </div>\n          <div className=\"col-4\">\n            <BookPrice id={id} price={price} maxBooks={count} />\n          </div>\n        </div>\n        <p>\n          Description: \n          {description}\n        </p>\n      </div>\n    ) : <Spinner />\n  )\n}\n\nBook.propTypes = {\n  book: PropTypes.instanceOf(Object).isRequired,\n  loading: PropTypes.bool.isRequired,\n  token: PropTypes.string.isRequired,\n  match: PropTypes.instanceOf(Object).isRequired,\n  fetchBookRequest: PropTypes.func.isRequired,\n  fetchBookSuccess: PropTypes.func.isRequired,\n  fetchBookFailure: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  book: state.books.book,\n  loading: state.books.loading,\n  token: state.books.user.token,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchBookRequest: () => dispatch(bookRequest()),\n  fetchBookSuccess: (book) => dispatch(bookSuccess(book)),\n  fetchBookFailure: (error) => dispatch(bookFailure(error)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Book);\n","import React, {useState} from 'react'\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {signIn} from '../../actions/actions';\nimport CallApi from '../../api/api';\n\nconst fetchFOrSignin = (name, func) => {\n  CallApi.post('/signin', {\n    username: name,\n  }).then((data) => {\n    const {username, avatar, token} = data;\n    func(username, avatar, token);\n  })\n}\n\nconst SignIn = ({signInUser}) => {\n  const [inputText, setstateInput] = useState('');\n  const [errorText, setstateError] = useState('error');\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12 text-center\">\n        <div>\n          <img className=\"border\" height=\"250\" src=\"images/defaultAvatar.png\" alt=\"avatar\" />\n        </div>\n        <div className=\"m-2\">\n          <label htmlFor=\"username\">\n            <p className=\"mb-0\"><b>Username</b></p>\n            <input\n              value={inputText}\n              onChange={(e) => {\n                setstateInput(e.target.value);\n                if(e.target.value.length < 4 || e.target.value.length > 16) {\n                  setstateError('error');\n                } else {\n                  setstateError('');\n                }\n              }}\n              className=\"col-12\"\n              type=\"text\"\n              name=\"username\"\n              id=\"username\"\n              placeholder=\"type Username\"\n            />\n          </label>\n          {errorText ? <p className=\"text-danger\">Field is not valid</p> : null}\n        </div>\n        <div>\n          <button onClick={() => fetchFOrSignin(inputText, signInUser)} disabled={!!errorText} className=\"col-2\" type=\"button\">Sign-In</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nSignIn.propTypes = {\n  signInUser: PropTypes.func.isRequired,\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  signInUser: (username, avatar, token) => dispatch(signIn(username, avatar, token)),\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n","import React from 'react'\n\nconst NotFound = () => {\n  return (\n    <div className=\"text-center\">\n      <img className=\"col-8\" src=\"./images/error404.jpg\" alt=\"error404\" />\n    </div>\n  )\n}\n\nexport default NotFound;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n\nconst BookItem = ({book}) => {\n  const {id, cover, title, author, price} = book;\n  const image = cover || 'images/imageNotFound.png'\n  return (\n    <div className=\"cart row col-3 border m-4 p-3\">\n      <img className=\"col-12\" src={image} alt=\"cover\" />\n      <p className=\"col-12\">{title}</p>\n      <p className=\"col-12\">{author}</p>\n      <p className=\"row col-12\">\n        <span className=\"col-8\">\n          Price:\n          {' '}\n          {price}\n        </span>\n        <Link to={`/books/${id}`} className=\"btn btn-secondary col-4\">View</Link>\n      </p>\n    </div>\n  )\n}\n\nBookItem.propTypes = {\n  book: PropTypes.instanceOf(Object).isRequired,\n}\n\nexport default BookItem;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {showFilteredBooks} from '../../actions/actions';\n\nconst Filters = ({search, price, onChangeFilter}) => {\n  return (\n    <div className=\"form-group row\">\n      <input\n        onChange={(e) => onChangeFilter(e.target.name, e.target.value)}\n        value={search}\n        className=\"form-control col-6\"\n        type=\"text\"\n        name=\"search\"\n        placeholder=\"Search by book name\"\n      />\n      <select onChange={(e) => onChangeFilter(e.target.name, e.target.value)} value={price} className=\"form-control col-3\" name=\"price\">\n        <option value=\"all\">all</option>\n        <option value=\"from_0_to_15\">{'0 < price > 15'}</option>\n        <option value=\"from_15_to_30\">{'15 < price > 30'}</option>\n        <option value=\"more_than_30\">{'price > 30'}</option>\n      </select>\n    </div>\n  )\n}\n\nFilters.propTypes = {\n  search: PropTypes.string.isRequired,\n  price: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  search: state.books.filters.search,\n  price: state.books.filters.price,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChangeFilter: (name, value) => dispatch(showFilteredBooks(name, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filters);\n","function filterForTitle(items, search) {\n  if (search.length === 0) {\n    return items;\n  }\n  return items.filter((item) => {\n    return item.title.toLowerCase().indexOf(search.toLowerCase()) > -1;\n  });\n}\n\nexport default filterForTitle;\n","// eslint-disable-next-line\nfunction filterForPrice(items, filter) {\n  if (filter === 'all') {\n    return items;\n  }\n  if (filter === 'from_0_to_15') {\n    return items.filter((item) => item.price >= 0 && item.price < 15);\n  }\n  if (filter === 'from_15_to_30') {\n    return items.filter((item) => item.price >= 15 && item.price < 30);\n  }\n  if (filter === 'more_than_30') {\n    return items.filter((item) => item.price > 30);\n  }\n}\nexport default filterForPrice;\n","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport BookItem from './BookItem';\nimport Filters from '../Filters/Filters';\nimport {booksRequest, booksSuccess, booksFailure} from '../../actions/actions';\nimport CallApi from '../../api/api';\nimport Spinner from '../../spinner/spinner'\nimport filterForTitle from '../../filters/filterForTitle';\nimport filterForPrice from '../../filters/filterForPrice';\n\nconst BookList = ({books, token, loading, search, price, fetchBooksRequest, fetchBooksSuccess, fetchBooksFailure}) => {\n  useEffect(() => {\n    CallApi.get('/books', token)\n    .then((data) => {\n      fetchBooksRequest();\n      setTimeout(() => fetchBooksSuccess(data), 2000);\n    })\n  }, [fetchBooksRequest, fetchBooksSuccess, token]);\n\n  const spinner = (loading) ? <Spinner /> : null;\n  const currentTodoList = filterForTitle(filterForPrice(books, price), search);\n  const booksArea = (books && !loading) ? (currentTodoList.map((item)=> <BookItem key={item.id} book={item} />)) : null;\n\n  return (\n    <div className=\"row p-3\">\n      <div className=\"col-10\">\n        <Filters />\n      </div>\n      <div className=\"row\">\n        {spinner}\n        {booksArea}\n      </div>\n    </div>\n  )\n}\n\nBookList.propTypes = {\n  books: PropTypes.instanceOf(Array).isRequired,\n  token: PropTypes.string.isRequired,\n  loading: PropTypes.bool.isRequired,\n  search: PropTypes.string.isRequired,\n  price: PropTypes.string.isRequired,\n  fetchBooksRequest: PropTypes.func.isRequired,\n  fetchBooksSuccess: PropTypes.func.isRequired,\n  fetchBooksFailure: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  books: state.books.books,\n  token: state.books.user.token,\n  loading: state.books.loading,\n  search: state.books.filters.search,\n  price: state.books.filters.price,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchBooksRequest: () => dispatch(booksRequest()),\n  fetchBooksSuccess: (books) => dispatch(booksSuccess(books)),\n  fetchBooksFailure: (error) => dispatch(booksFailure(error)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookList);\n\n","const updateCartItems = (cartItems, item, index) => {\n  if (item.count === 0) {\n    return [...cartItems.slice(0, index), ...cartItems.slice(index + 1)];\n  }\n  if (index === -1) {\n    return [...cartItems, item];\n  }\n  return [...cartItems.slice(0, index), item, ...cartItems.slice(index + 1)];\n};\n\nexport default updateCartItems;\n","const updateCartItem = (book, item = {}, quantity) => {\n  const { id = book.id, count = 0, title = book.title, total = 0 } = item;\n  const price = total + quantity * book.price;\n  return {\n    id,\n    count: +count + +quantity,\n    title,\n    total: +price.toFixed(2),\n  };\n};\n\nexport default updateCartItem;\n","const updateTotalPrice = (cartItems, book, quantity) => {\n  let totalCount = 0;\n  cartItems.map((item) => {\n    totalCount += item.total;\n    return totalCount;\n  });\n  return totalCount + book.price * quantity;\n};\n\nexport default updateTotalPrice;\n","import updateCartItems from './updateCartItems';\nimport updateCartItem from './updateCartItem';\nimport updateTotalPrice from './updateTotalPrice';\n\nconst updateOrder = (bookId, quantity, state) => {\n  const {\n    books,\n    cart: { cartItems },\n  } = state;\n  const book = books.find((item) => item.id === bookId);\n  const itemIndex = cartItems.findIndex(({ id }) => id === bookId);\n  const item = cartItems[itemIndex];\n  const newItem = updateCartItem(book, item, quantity);\n\n  return {\n    cartItems: updateCartItems(cartItems, newItem, itemIndex),\n    orderTotal: updateTotalPrice(cartItems, book, quantity).toFixed(2),\n  };\n};\n\nexport default updateOrder;\n","import * as actionTypes from '../actions/actionTypes';\nimport updateOrder from './additionFunctions/updateOrder';\n\nconst initialState = {\n  user: {\n    username: undefined,\n    avatar: undefined,\n    token: undefined,\n  },\n  books: [],\n  book: {},\n  filters: {\n    search: '',\n    price: 'all',\n  },\n  cart: {\n    cartItems: [],\n    orderTotal: undefined,\n  },\n  loading: false,\n  error: null,\n};\n\nconst books = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SIGNIN:\n      return {\n        ...state,\n        user: {\n          username: action.username,\n          avatar: action.avatar,\n          token: action.token,\n        },\n      };\n    case actionTypes.SIGNOUT:\n      return {\n        ...state,\n        user: {\n          username: undefined,\n          avatar: undefined,\n          token: undefined,\n        },\n      };\n    case actionTypes.SHOW_FILTERED_BOOKS:\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          [action.name]: action.value,\n        },\n      };\n    case actionTypes.FETCH_BOOKS_REQUEST:\n      return {\n        ...state,\n        books: [],\n        loading: true,\n        error: null,\n      };\n    case actionTypes.FETCH_BOOKS_SUCCESS:\n      return {\n        ...state,\n        books: action.books,\n        loading: false,\n        error: null,\n      };\n    case actionTypes.FETCH_BOOKS_FAILURE:\n      return {\n        ...state,\n        books: [],\n        loading: false,\n        error: action.error,\n      };\n    case actionTypes.FETCH_BOOK_REQUEST:\n      return {\n        ...state,\n        book: {},\n        loading: true,\n        error: null,\n      };\n    case actionTypes.FETCH_BOOK_SUCCESS:\n      return {\n        ...state,\n        book: action.book,\n        loading: false,\n        error: null,\n      };\n    case actionTypes.FETCH_BOOK_FAILURE:\n      return {\n        ...state,\n        book: {},\n        loading: false,\n        error: action.error,\n      };\n    case actionTypes.ADD_BOOK:\n      return {\n        ...state,\n        cart: updateOrder(action.bookId, action.quantity, state),\n      };\n    case actionTypes.SEND_BOOK:\n      return {\n        ...state,\n        cart: {\n          cartItems: [],\n          orderTotal: undefined,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default books;\n","import { combineReducers } from 'redux';\nimport books from './books';\n\nconst reducers = combineReducers({\n  books,\n});\n\nexport default reducers;\n","import { createStore } from 'redux';\nimport reducers from './reducers/reducers';\n\nconst store = createStore(reducers);\n\nexport default store;\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport {Provider} from 'react-redux'\nimport Header from \"./components/Header/Header\";\nimport Cart from './components/Cart/Cart';\nimport Book from './components/Book/Book';\nimport SignIn from './components/SignIn/SignIn';\nimport NotFound from './components/NotFound/NotFound';\nimport BookList from './components/BookList/BookList';\nimport store from './store'\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"container\">\n          <hr />\n          <Header />\n          <hr />\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to=\"/signin\" />\n            </Route>\n            <Route path=\"/signin\" component={SignIn} /> \n            <Route exact path=\"/books\" component={BookList} /> \n            <Route path=\"/books/:id\" component={Book} />\n            <Route path=\"/cart\" component={Cart} />\n            <Route exact path=\"*\" component={NotFound} />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}